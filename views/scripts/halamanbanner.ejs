<script>
    let id;
    let array = [];

    function getdatabanner() {
        fetch('/getfilebannerjs', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => response.json())
            .then(data => {
                // console.log(data.response)
                const contents = data.response.contents;
                const regex = /\[[\s\S]*?\]/;
                const match = regex.exec(contents);
                // console.log(match)
                const bannerString = match[0].replace(/(\r\n|\n|\r)/gm, "");
                // console.log(bannerString);
                id = data.response[".id"];
                updatetablebanner(bannerString, data.response[".id"]);

                // const test = JSON.parse("["+bannerString+"]");
                // console.log(test);
                // console.log(JSON.parse(match[1]))
            })
            .catch(error => {
                console.log('Error:', error);
            });
    }

    getdatabanner();

    function updatetablebanner(data, id) {
        // console.log(data);
        const banner = JSON.parse(data);
        var tbody = document.querySelector('.custom-table-body-list-banner');
        tbody.innerHTML = '';
        let count = 0;
        banner.forEach(function (item) {
            count++;
            var row = document.createElement('tr');

            var countCell = document.createElement('td');
            countCell.textContent = count + ".";
            countCell.style.width = '30px';

            var altCell = document.createElement('td');
            var altInput = document.createElement('input');
            altInput.type = 'text';
            altInput.value = item.alt;
            altCell.appendChild(altInput);

            var linkCell = document.createElement('td');
            var linkInput = document.createElement('input');
            linkInput.type = 'text';
            linkInput.value = item.link;
            linkCell.appendChild(linkInput);
            linkCell.style.width = '150px';

            var imgCell = document.createElement('td');
            var imgElement = document.createElement('img');
            imgElement.src = item.link;
            imgElement.style.width = '100%';
            imgElement.style.height = 'auto';
            imgCell.style.width = '150px';
            imgCell.appendChild(imgElement);

            var actionCell = document.createElement('td');

            var SaveButton = document.createElement('button');
            SaveButton.classList.add('btn', 'btn-vpn-nonaktif', 'btn-primary');
            SaveButton.textContent = "Simpan";
            SaveButton.style.margin = '5px';
            SaveButton.addEventListener('click', function () {
                var newAlt = altInput.value;
                var newLink = linkInput.value;
                var index = array.findIndex(x => x.id === item.id);
                if (index !== -1) {
                    array[index].alt = newAlt;
                    array[index].link = newLink;
                    showNotification(true, `Data nomor ${array[index].id} berhasil diubah`);
                } else {
                    showNotification(false, `Data dengan ID ${item.id} tidak ditemukan`);
                }
            });

            var DeleteButton = document.createElement('button');
            DeleteButton.classList.add('btn', 'btn-vpn-nonaktif', 'btn-danger');
            DeleteButton.textContent = "Hapus";
            DeleteButton.style.margin = '5px';
            DeleteButton.addEventListener('click', function () {
                var index = array.findIndex(x => x.id === item.id);
                if (index !== -1) {
                    array.splice(index, 1);
                    showNotification(true, `Data nomor ${item.id} berhasil dihapus`);
                    // Perbarui tampilan setelah menghapus
                    tbody.removeChild(row);
                } else {
                    showNotification(false, `Data dengan ID ${item.id} tidak ditemukan`);
                }
            });

            actionCell.appendChild(SaveButton);
            actionCell.appendChild(DeleteButton);

            // Validasi ID unik sebelum menambahkan ke dalam array
            if (!array.some(x => x.id === item.id)) {
                array.push({ id: item.id, alt: item.alt, link: item.link });
                row.appendChild(countCell);
                row.appendChild(altCell);
                row.appendChild(linkCell);
                row.appendChild(imgCell);
                row.appendChild(actionCell);
                tbody.appendChild(row);
            } else {
                showNotification(false, `Data dengan ID ${item.id} tidak unik`);
            }
        });


        // console.log(array);

        // console.log(banner);
        // console.log(banner.length);
        // const update = "var banner = " + data;
        // console.log(update)
    }

    function SimpanUpdate() {
        // console.log(id);
        // console.log(array);
        const update = "var banner = " + JSON.stringify(array);
        updatedatabanner(id, update);
    }

    function updatedatabanner(id, data) {
        const formData = {
            id: id,
            contents: data
        }
        fetch('/updatebannerjs', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
            .then(response => response.json())
            .then(data => {
                // console.log(data);
                showNotification(data.success, data.message);
                setTimeout(() => {
                    showNotification(true, `Memperbarui data`);
                    getdatabanner();
                    array = [];
                }, 2000);
            })
            .catch(error => {
                console.log('Error:', error);
            });
    }
</script>