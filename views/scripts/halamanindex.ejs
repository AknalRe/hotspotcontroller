<script>
    const role = "<%= role %>";
    // console.log("<%= mikrotikstatus %>")

    const currentTime = new Date().getHours();

    function getUcapan() {
        if (currentTime >= 5 && currentTime < 11) {
            return "Pagi"
        } else if (currentTime >= 11 && currentTime < 15) {
            return "Siang"
        } else if (currentTime >= 15 && currentTime < 16) {
            return "Sore"
        } else {
            return "Malam"
        }
    }
    document.addEventListener('DOMContentLoaded', function () {
        const usernameElement = document.getElementById('ucapan');
        const name = "<%= name %>";
        // console.log(name)

        const ucapan = getUcapan();
        usernameElement.innerText = `${ucapan} ${name}, Semangat!`;
    });
    function logout() {
        const formData = {};
        fetch('/logout', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
            .then(response => response.json())
            .then(data => {
                // console.log(data);
                if (data.success) {
                    showNotification(data.success, data.message);
                    setTimeout(() => {
                        window.location.href = '/';
                    }, 5000);
                } else {
                    showNotification(data.success, data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    updateJenisAkunOptions()

    function updateJenisAkunOptions() {
        fetch('/infoprofilhotspot', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => response.json())
            .then(data => {
                // Hapus semua opsi saat ini
                // console.log(data.response)
                const selectElement = document.getElementById('jenisAkun');
                selectElement.innerHTML = "";
                data.response.forEach(option => {
                    const optionElement = document.createElement('option');
                    optionElement.textContent = option.name;
                    optionElement.value = option.name;
                    selectElement.appendChild(optionElement);
                });
                togglePasswordVisibility();
            })
            .catch(error => {
                console.log('Error:', error);
            });
    }

    function togglePasswordVisibility() {
        var jenisAkun = document.getElementById("jenisAkun");
        var passwordField = document.getElementById("formpassword");
        if (jenisAkun.value === "Tamu") {
            passwordField.style.display = "none";
        } else {
            passwordField.style.display = "block";
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        document.getElementById('tambahAkunForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const username = document.getElementById('username').value;
            let password = document.getElementById('password').value;
            const jenisAkun = document.getElementById('jenisAkun').value;
            // if (!password) {
            //     password = username;
            // }
            const formData = {
                username: username,
                jenisAkun: jenisAkun,
                password: password,
            }
            fetch('/tambahakunhotspot', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    showNotification(data.success, data.successwa == true ? `${data.message} & Berhasil mengirimkan pesan whatsapp` : data.message);
                    if (data.success) {
                        document.getElementById('username').value = '';
                        document.getElementById('password').value = '';
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });
    })

    document.getElementById("jenisAkun").addEventListener("change", function () {
        togglePasswordVisibility();
    });

    function formatkuota(kuota) {
        let format;
        if (kuota.length > 9) {
            format = (kuota / (1024 * 1024 * 1024)).toFixed(2) + " GB"; // Konversi ke MB jika lebih dari 9

        } else {
            format = (kuota / (1024 * 1024)).toFixed(2) + " MB"; // Konversi ke GB jika tidak lebih dari 9
        }
        return format;
    }
</script>


<% if (mikrotikstatus) { %>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        function listhotspot() {
            fetch('/hotspotuserlist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    // Handle respon dari server sesuai kebutuhan
                    // console.log(data);

                    // Tampilkan data ke dalam tabel
                    displayDataInTable(data);
                })
                .catch(error => {
                    console.log('Error:', error);
                });
        }

        function displayDataInTable(data) {
            const tbody = document.querySelector('.custom-table-body-listhotspotuser');
            tbody.innerHTML = '';
            let count = 0;

            if ("<%= role %>" === "Administrator") {
                data.forEach(item => {
                    count++
                    var row = document.createElement('tr');

                    var countCell = document.createElement('td');
                    countCell.textContent = count + ".";
                    countCell.style.width = '30px';

                    var nameCell = document.createElement('td');
                    nameCell.textContent = item.name;

                    var passwordCell = document.createElement('td');
                    passwordCell.textContent = item.password;

                    var pemakaianCell = document.createElement('td');
                    if (item["bytes-in"] > 0 && item["bytes-out"] > 0) {
                        let download = formatkuota(item["bytes-out"]);
                        let upload = formatkuota(item["bytes-in"]);
                        if (download.includes("GB") || upload.includes("GB")) {
                            pemakaianCell.style.color = "blue"
                        }
                        pemakaianCell.textContent = download + " / " + upload;
                    } else {
                        pemakaianCell.style.color = 'red';
                        pemakaianCell.textContent = "Akun Belum Di Pakai";
                    }

                    var profileCell = document.createElement('td');
                    profileCell.textContent = item.profile;

                    var statusCell = document.createElement('td');
                    let status = item.disabled === 'false' ? 'Aktif' : 'Tidak Aktif';
                    statusCell.style.color = item.disabled === 'false' ? 'blue' : 'red';
                    statusCell.textContent = status

                    var actionCell = document.createElement('td')
                    // actionCell.textContent = "SOON";

                    if (item.profile === 'default') {
                        actionCell.textContent = "Akun Default";
                    } else {
                        var deleteButton = document.createElement('button');
                        deleteButton.classList.add('btn', 'btn-vpn-hapus', 'btn-danger');
                        deleteButton.textContent = 'Hapus';
                        deleteButton.style.margin = '5px';
                        deleteButton.addEventListener('click', function () {
                            deleteakunhotspot(item['.id'], item.name);
                        });

                        var nonaktifkanButton = document.createElement('button');
                        nonaktifkanButton.classList.add('btn', 'btn-vpn-nonaktif', 'btn-warning');
                        nonaktifkanButton.textContent = item.disabled === "false" ? "Nonaktifkan" : "Aktifkan";
                        nonaktifkanButton.style.margin = '5px';
                        nonaktifkanButton.addEventListener('click', function () {
                            nonaktifkanakunhotspot(item['.id'], item.disabled === "false" ? "true" : "false", item.name)
                        })

                        var editForm = document.createElement('form');
                        editForm.method = 'GET';
                        editForm.action = `/editakunhotspot/${item['.id']}`;
                        var editButton = document.createElement('button');
                        editButton.style.margin = '5px';
                        editButton.type = 'submit';
                        editButton.textContent = 'Edit';
                        editButton.className = 'btn btn-primary';
                        editForm.appendChild(editButton);


                        actionCell.appendChild(deleteButton)
                        actionCell.appendChild(nonaktifkanButton)
                        actionCell.appendChild(editForm);
                    }

                    row.appendChild(countCell);
                    row.appendChild(nameCell);
                    row.appendChild(passwordCell);
                    row.appendChild(pemakaianCell);
                    row.appendChild(profileCell);
                    row.appendChild(statusCell);
                    row.appendChild(actionCell);

                    tbody.appendChild(row);
                })
            } else {
                if (data.length > 0) {
                    data.forEach(item => {
                        if (item.name !== "HaiCantikTamu") {
                            count++
                            var row = document.createElement('tr');

                            var countCell = document.createElement('td');
                            countCell.textContent = count + ".";
                            countCell.style.width = '30px';

                            var nameCell = document.createElement('td');
                            nameCell.textContent = item.name;

                            // var passwordCell = document.createElement('td');
                            // passwordCell.textContent = item.password;

                            // var profileCell = document.createElement('td');
                            // profileCell.textContent = item.profile;

                            var statusCell = document.createElement('td');
                            let status = item.disabled === 'false' ? 'Aktif' : 'Tidak Aktif';
                            statusCell.style.color = item.disabled === 'false' ? 'blue' : 'red';
                            if (item["bytes-in"] > 0 && item["bytes-out"] > 0) {
                                statusCell.textContent = status + " / Sudah digunakan";
                            } else {
                                // statusCell.style.color = "black"
                                statusCell.textContent = status + " / Belum digunakan";
                            }
                            // statusCell.textContent = status

                            var actionCell = document.createElement('td')
                            // actionCell.textContent = "SOON";

                            var nonaktifkanButton = document.createElement('button');
                            nonaktifkanButton.classList.add('btn', 'btn-vpn-nonaktif', 'btn-warning');
                            nonaktifkanButton.textContent = item.disabled === "false" ? "Nonaktifkan" : "Aktifkan";
                            nonaktifkanButton.style.margin = '5px';
                            nonaktifkanButton.addEventListener('click', function () {
                                nonaktifkanakunhotspot(item['.id'], item.disabled === "false" ? "true" : "false", item.name)
                            })

                            actionCell.appendChild(nonaktifkanButton)

                            row.appendChild(countCell);
                            row.appendChild(nameCell);
                            // row.appendChild(passwordCell);
                            // row.appendChild(profileCell);
                            row.appendChild(statusCell);
                            row.appendChild(actionCell);

                            tbody.appendChild(row);
                        }
                    })
                } else {
                    var row = document.createElement('tr');
                    var statusCell = document.createElement('td');
                    statusCell.textContent = "Tidak ada akun tamu";
                    statusCell.style.textAlign = "center";
                    statusCell.style.color = "red";
                    statusCell.colSpan = 8;
                    row.appendChild(statusCell);
                    tbody.appendChild(row);
                }
            }
        }

        function nonaktifkanakunhotspot(id, status, nama) {
            const formData = {
                id: id,
                status: status,
                nama: nama,
            }
            fetch('/nonaktifkanakunhotspot', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
                .then(response => response.json())
                .then(data => {
                    // console.log(data);
                    showNotification(data.success, data.message);
                    listhotspot()
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function deleteakunhotspot(id, nama) {
            const formData = {
                id: id,
                nama: nama,
            }
            fetch('/deleteakunhotspot', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
                .then(response => response.json())
                .then(data => {
                    // console.log(data);
                    showNotification(data.success, data.message);
                    listhotspot()
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function logoutkansemua() {
            fetch('/logoutkansemua', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    // console.log(data);
                    showNotification(data.success, data.message);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function bindingakun(action, id, add, toadd, mac, server) {
            const formData = {
                action: action,
                id: id,
                add: add,
                toadd: toadd,
                mac: mac,
                server: server,
            }
            fetch('/binding', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
                .then(response => response.json())
                .then(data => {
                    // console.log(data);
                    showNotification(data.success, data.message);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function hapusbindingakun(action, id) {
            const formData = {
                action: action,
                id: id,
            }
            fetch('/hapusbindingakun', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
                .then(response => response.json())
                .then(data => {
                    // console.log(data);
                    showNotification(data.success, data.message);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function logoutkansemua() {
            fetch('/logoutkansemua', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    // console.log(data);
                    showNotification(data.success, data.message);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function logoutakunhotspot(id, nama) {
            const formData = {
                id: id,
                nama: nama,
            }
            fetch('/logoutakunhotspot', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
                .then(response => response.json())
                .then(data => {
                    // console.log(data);
                    showNotification(data.success, data.message);
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        let divtambahakun = document.getElementById('tambah-hotspot').style;
        let divlistakun = document.getElementById('list-akun-hotspot').style;
    </script>
    <% if (role=='Administrator' ) { %>
        <script>
            let divakunaktif = document.getElementById('info-user-aktif').style;
            let divqueueakun = document.getElementById('info-queue-user').style;
            let divhosthotspot = document.getElementById('info-lease-user').style;
            let divbinding = document.getElementById('info-binding-user').style;
            let infomikrotik = document.getElementById('info-device-mikrotik').style;

            function tampilkanlisthotspot() {
                infomikrotik.display = 'none';
                divhosthotspot.display = 'none';
                divbinding.display = 'none';
                divqueueakun.display = 'none';
                divakunaktif.display = 'none';
                divtambahakun.display = 'none';
                listhotspot();
                divlistakun.display = 'block';
            }

            function tampilkantambahhotspot() {
                divhosthotspot.display = 'none';
                divbinding.display = 'none';
                divqueueakun.display = 'none';
                divakunaktif.display = 'none';
                divlistakun.display = 'none';
                divtambahakun.display = 'block';
                infomikrotik.display = 'block';
            }

            function tampilkanuseraktif() {
                infomikrotik.display = 'none';
                divhosthotspot.display = 'none';
                divbinding.display = 'none';
                divqueueakun.display = 'none';
                divlistakun.display = 'none';
                divtambahakun.display = 'none';
                divakunaktif.display = 'block';
            }

            function tampilkanuserqueue() {
                infomikrotik.display = 'none';
                divhosthotspot.display = 'none';
                divbinding.display = 'none';
                divakunaktif.display = 'none';
                divlistakun.display = 'none';
                divtambahakun.display = 'none';
                divqueueakun.display = 'block';
            }

            function tampilkanleaseclient() {
                infomikrotik.display = 'none';
                divqueueakun.display = 'none';
                divakunaktif.display = 'none';
                divlistakun.display = 'none';
                divtambahakun.display = 'none';
                divbinding.display = 'none';
                divhosthotspot.display = 'block';
            }

            function listbindinguser() {
                infomikrotik.display = 'none';
                divhosthotspot.display = 'none';
                divqueueakun.display = 'none';
                divakunaktif.display = 'none';
                divlistakun.display = 'none';
                divtambahakun.display = 'none';
                divbinding.display = 'block';
            }

            var socket = io();

            socket.on('useraktif', function (data) {
                const infoaktif = document.getElementById('info-akun-aktif');

                var tbody = document.querySelector('.custom-table-body-listakunaktif');
                tbody.innerHTML = '';
                if (data) {
                    // console.log(data);
                    let jumlahData = 0;

                    // Menangani baik array maupun non-array
                    if (Array.isArray(data)) {
                        jumlahData = data.length;
                    } else {
                        jumlahData = data ? 1 : 0;
                    }

                    // Menambahkan logika untuk menangani jika data tidak ada atau jumlahData sama dengan 0
                    if (jumlahData > 0) {
                        infoaktif.textContent = `${jumlahData} Akun hotspot aktif`;
                    } else {
                        infoaktif.textContent = `${jumlahData} hotspot yang aktif`;
                    }
                    var count = 0;
                    if (Array.isArray(data)) {
                        data.forEach(function (item) {
                            count++
                            var row = document.createElement('tr');

                            var countCell = document.createElement('td');
                            countCell.textContent = count + ".";
                            countCell.style.width = '30px';

                            var nameCell = document.createElement('td');
                            nameCell.textContent = item.user;

                            var divisiCell = document.createElement('td');
                            divisiCell.textContent = item.server;

                            var addressCell = document.createElement('td');
                            addressCell.textContent = item.address;

                            var pemakaianCell = document.createElement('td');
                            if (item["bytes-in"] > 0 && item["bytes-out"] > 0) {
                                let download = formatkuota(item["bytes-out"]);
                                let upload = formatkuota(item["bytes-in"]);
                                if (download.includes("GB") || upload.includes("GB")) {
                                    pemakaianCell.style.color = "blue"
                                }
                                pemakaianCell.textContent = download + " / " + upload;
                            } else {
                                pemakaianCell.style.color = 'red';
                                pemakaianCell.textContent = "0 Kbps / 0 Kbps";
                            }

                            // var trafikCell = document.createElement('td');
                            // trafikCell.textContent = "SOON"

                            var actionCell = document.createElement('td');
                            var nonaktifButton = document.createElement('button');
                            nonaktifButton.classList.add('btn', 'btn-vpn-hapus', 'btn-danger');
                            nonaktifButton.textContent = 'Logoutkan';
                            nonaktifButton.style.margin = '5px';
                            nonaktifButton.addEventListener('click', function () {
                                logoutakunhotspot(item['.id'], item.user);
                            });

                            actionCell.appendChild(nonaktifButton)

                            row.appendChild(countCell);
                            row.appendChild(nameCell);
                            row.appendChild(divisiCell);
                            row.appendChild(addressCell);
                            row.appendChild(pemakaianCell);
                            // row.appendChild(trafikCell);
                            row.appendChild(actionCell);

                            tbody.appendChild(row);
                        });
                    } else {
                        count++;
                        var row = document.createElement('tr');

                        var countCell = document.createElement('td');
                        countCell.textContent = count + ".";
                        countCell.style.width = '30px';

                        var nameCell = document.createElement('td');
                        nameCell.textContent = data.user;

                        var divisiCell = document.createElement('td');
                        divisiCell.textContent = data.server;

                        var addressCell = document.createElement('td');
                        addressCell.textContent = data.address;

                        var pemakaianCell = document.createElement('td');
                        if (data["bytes-in"] > 0 && data["bytes-out"] > 0) {
                            let download = formatkuota(data["bytes-out"]);
                            let upload = formatkuota(data["bytes-in"]);
                            if (download.includes("GB") || upload.includes("GB")) {
                                pemakaianCell.style.color = "blue"
                            }
                            pemakaianCell.textContent = download + " / " + upload;
                        } else {
                            pemakaianCell.style.color = 'red';
                            pemakaianCell.textContent = "0 Kbps / 0 Kbps";
                        }

                        // var trafikCell = document.createElement('td');
                        // trafikCell.textContent = "SOON"

                        var actionCell = document.createElement('td');
                        var nonaktifButton = document.createElement('button');
                        nonaktifButton.classList.add('btn', 'btn-vpn-hapus', 'btn-danger');
                        nonaktifButton.textContent = 'Logoutkan';
                        nonaktifButton.style.margin = '5px';
                        nonaktifButton.addEventListener('click', function () {
                            logoutakunhotspot(data['.id'], data.user);
                        });

                        actionCell.appendChild(nonaktifButton)

                        row.appendChild(countCell);
                        row.appendChild(nameCell);
                        row.appendChild(divisiCell);
                        row.appendChild(addressCell);
                        row.appendChild(pemakaianCell);
                        // row.appendChild(trafikCell);
                        row.appendChild(actionCell);

                        tbody.appendChild(row);
                    }
                } else {
                    var row = document.createElement('tr');
                    var statusCell = document.createElement('td');
                    statusCell.textContent = "Tidak ada akun yang aktif";
                    statusCell.style.textAlign = "center";
                    statusCell.style.color = "red";
                    statusCell.colSpan = 8;
                    infoaktif.textContent = "Tidak ada akun yang aktif";
                    row.appendChild(statusCell);
                    tbody.appendChild(row);
                }
            });

            socket.on('queue', function (data) {
                // console.log(data);
                var tbody = document.querySelector('.custom-table-body-listqueueaktif');
                tbody.innerHTML = '';
                let count = 0;
                let dataqueue = false;

                if (data && data.length > 0) {
                    data.forEach(function (item) {
                        if (item.parent === "1.4. Selain" && item.name !== item.target.replace("/32", "")) {
                            dataqueue = true;
                            count++;
                            var row = document.createElement('tr');

                            var countCell = document.createElement('td');
                            countCell.textContent = count + ".";
                            countCell.style.width = '30px';

                            var namaCell = document.createElement('td');
                            namaCell.textContent = item.name;

                            // var divisiCell = document.createElement('td');
                            // divisiCell.textContent = item.parent || ``;

                            var targetCell = document.createElement('td');
                            targetCell.textContent = item.target.replace("/32", "");

                            var prioCell = document.createElement('td');
                            prioCell.textContent = item.priority;

                            var maxlimitCell = document.createElement('td');
                            maxlimitCell.textContent = formatValue(item['max-limit']);

                            var rates = item.rate.split("/");
                            var uploadRate = parseFloat(rates[0]);
                            var downloadRate = parseFloat(rates[1]);

                            var uploadSpeed, downloadSpeed;
                            if (uploadRate >= 1000000) {
                                uploadSpeed = (uploadRate / 1000000).toFixed(2) + " Mbps";
                            } else {
                                uploadSpeed = (uploadRate / 1000).toFixed(2) + " kbps";
                            }

                            if (downloadRate >= 1000000) {
                                downloadSpeed = (downloadRate / 1000000).toFixed(2) + " Mbps";
                            } else {
                                downloadSpeed = (downloadRate / 1000).toFixed(2) + " kbps";
                            }

                            var formattedRate = uploadSpeed + " / " + downloadSpeed;

                            var pemakaianCell = document.createElement('td');
                            pemakaianCell.textContent = formattedRate;

                            var statusCell = document.createElement('td');
                            statusCell.textContent = item.disabled == "false" ? "Aktif" : "Tidak Aktif";

                            var actionCell = document.createElement('td');
                            var editForm = document.createElement('form');
                            editForm.method = 'GET';
                            editForm.action = `/editqueue/${item['.id']}`;
                            var editButton = document.createElement('button');
                            editButton.style.margin = '5px';
                            editButton.type = 'submit';
                            editButton.textContent = 'Edit';
                            editButton.className = 'btn btn-primary';
                            editForm.appendChild(editButton);

                            actionCell.appendChild(editForm);

                            row.appendChild(countCell);
                            row.appendChild(namaCell);
                            // row.appendChild(divisiCell);
                            row.appendChild(targetCell);
                            row.appendChild(prioCell);
                            row.appendChild(maxlimitCell);
                            row.appendChild(pemakaianCell);
                            row.append(statusCell);
                            row.appendChild(actionCell);
                            tbody.appendChild(row);
                        }
                    });
                }

                if (!dataqueue) {
                    var row = document.createElement('tr');
                    var statusCell = document.createElement('td');
                    statusCell.textContent = "Tidak ada akun yang aktif";
                    statusCell.style.textAlign = "center";
                    statusCell.style.color = "red";
                    statusCell.colSpan = 8;
                    row.appendChild(statusCell);
                    tbody.appendChild(row);
                }
            });

            function formatValue(value) {
                if (value === "0/0") {
                    return "Tanpa Batas";
                } else {
                    const parts = value.split('/');
                    const firstPart = parts[0];
                    const secondPart = parts[1];
                    const numericValue1 = parseFloat(firstPart);
                    const numericValue2 = parseFloat(secondPart);
                    let formattedValue1, formattedValue2;

                    if (numericValue1 >= 1000000) {
                        formattedValue1 = (numericValue1 / 1000000).toFixed(0) + " Mbps";
                    } else {
                        formattedValue1 = (numericValue1 / 1000).toFixed(0) + " Kbps";
                    }

                    if (numericValue2 >= 1000000) {
                        formattedValue2 = (numericValue2 / 1000000).toFixed(0) + " Mbps";
                    } else {
                        formattedValue2 = (numericValue2 / 1000).toFixed(0) + " Kbps";
                    }

                    return formattedValue1 + " / " + formattedValue2;
                }
            }

            socket.on('host', function (data) {
                // console.log(data);
                var tbody = document.querySelector('.custom-table-body-listhost');
                tbody.innerHTML = '';
                let count = 0;
                let dataqueue = false;

                if (data && data.length > 0) {
                    data.forEach(function (item) {
                        if (item.authorized == "false") {
                            dataqueue = true;
                            count++;
                            var row = document.createElement('tr');

                            var countCell = document.createElement('td');
                            countCell.textContent = count + ".";
                            countCell.style.width = '30px';

                            var serverCell = document.createElement('td');
                            serverCell.textContent = item.server;

                            var addressCell = document.createElement('td');
                            addressCell.textContent = item.address;

                            var macCell = document.createElement('td');
                            macCell.textContent = item['mac-address'];

                            var statusCell = document.createElement('td');
                            statusCell.textContent = item.bypassed == "false" ? "Belum Login / Tidak Terbinding" : "Terbinding";

                            var actionCell = document.createElement('td');

                            // if (item.bypassed === "true") {
                            //     actionCell.textContent = "Sudah Aktif";
                            //     actionCell.style.color = "black";
                            //     actionCell.style.fontWeight = "bold";
                            //     actionCell.style.pointerEvents = "none"; // Mengatur agar tombol tidak dapat diklik
                            // } else {
                            //     var nonaktifkanButton = document.createElement('button');
                            //     nonaktifkanButton.classList.add('btn', 'btn-vpn-nonaktif', 'btn-danger');
                            //     nonaktifkanButton.textContent = "Bypasskan";
                            //     nonaktifkanButton.style.margin = '5px';
                            //     nonaktifkanButton.addEventListener('click', function () {
                            //         bindingakun(item['.id'], item.address, item["to-address"], item['mac-address'], item.server)
                            //     });

                            //     actionCell.appendChild(nonaktifkanButton);
                            // }

                            var nonaktifkanButton = document.createElement('button');
                            nonaktifkanButton.classList.add('btn', 'btn-vpn-nonaktif', 'btn-danger');
                            nonaktifkanButton.textContent = item.bypassed == "false" ? "Binding" : "Lepas Binding";
                            nonaktifkanButton.style.margin = '5px';
                            nonaktifkanButton.addEventListener('click', function () {
                                bindingakun(item.bypassed == "false" ? false : true, item['.id'], item.address, item["to-address"], item['mac-address'], item.server)
                            });

                            actionCell.appendChild(nonaktifkanButton);

                            row.appendChild(countCell);
                            row.appendChild(serverCell);
                            row.appendChild(addressCell);
                            row.appendChild(macCell);
                            row.appendChild(statusCell);
                            row.appendChild(actionCell);

                            tbody.appendChild(row);
                        }
                    })
                }
            });

            socket.on('binding', function (data) {
                // console.log(data);
                var tbody = document.querySelector('.custom-table-body-listbinding');
                tbody.innerHTML = '';
                let count = 0;
                let dataqueue = false;

                if (data && data.length > 0) {
                    data.forEach(function (item) {
                        dataqueue = true;
                        count++;
                        var row = document.createElement('tr');

                        var countCell = document.createElement('td');
                        countCell.textContent = count + ".";
                        countCell.style.width = '30px';

                        var serverCell = document.createElement('td');
                        serverCell.textContent = item.server || `all`;

                        var addressCell = document.createElement('td');
                        addressCell.textContent = item.address;

                        var macCell = document.createElement('td');
                        macCell.textContent = item['mac-address'];

                        var statusCell = document.createElement('td');
                        statusCell.textContent = item.disabled == "false" ? "Terbinding/Aktif" : "Terbinding/Tidak Aktif";
                        if (item.disabled == "true") {
                            statusCell.style.color = 'red'
                        }

                        var actionCell = document.createElement('td');

                        var hapusButton = document.createElement('button');
                        hapusButton.classList.add('btn', 'btn-vpn-nonaktif', 'btn-danger');
                        hapusButton.textContent = item.disabled == "false" ? "Nonaktifkan" : "Aktifkan";
                        hapusButton.style.margin = '5px';
                        hapusButton.addEventListener('click', function () {
                            hapusbindingakun(item.disabled, item[".id"])
                        });

                        actionCell.appendChild(hapusButton);

                        row.appendChild(countCell);
                        row.appendChild(serverCell);
                        row.appendChild(addressCell);
                        row.appendChild(macCell);
                        row.appendChild(statusCell);
                        row.appendChild(actionCell);

                        tbody.appendChild(row);
                    });
                }
            });

            document.getElementById('info-device-mikrotik').style.display = 'none';
            setTimeout(() => {
                if (divlistakun.display == 'block' || divakunaktif.display == 'block' || divqueueakun.display == 'block' || divhosthotspot.display == 'block' || divbinding.display == 'block') {
                    infomikrotik.display = 'none';
                } else {
                    infomikrotik.display = 'block';
                }
            }, 6000);
            
            socket.on('identity', function(data) {
                // console.log(data)
                const identity = data.name
                document.getElementById('info-mikrotik-identity').textContent = `Nama Mikrotik : ${identity}`;
            })

            socket.on('resource', function(data) {
                // console.log(data);
                document.getElementById('info-mikrotik-uptime').textContent = " " + formatUptime(data.uptime);
                document.getElementById('info-mikrotik-cpu').textContent = " " + data['cpu-load'] + "%";
            });

            function formatUptime(time) {
                var regex = /(\d+w)?(\d+d)?(\d+h)?(\d+m)?(\d+s)?/;
                var match = time.match(regex);

                if (match) {
                    var weeks = match[1] ? parseInt(match[1]) : 0;
                    var days = match[2] ? parseInt(match[2]) : 0;
                    var hours = match[3] ? parseInt(match[3]) : 0;
                    var minutes = match[4] ? parseInt(match[4]) : 0;
                    var seconds = match[5] ? parseInt(match[5]) : 0;

                    var formattedTime = ((weeks * 7) + days) + " Hari " + hours + " Jam " + minutes + " Menit";
                    return formattedTime;
                } else {
                    return "0";
                }
            }

            socket.on('monitortraffic', function(speed) {
                // console.log(speed);
                var downloadText = speed['tx-bits-per-second'];
                    var uploadText = speed['rx-bits-per-second'];
                    var downloadSpeed, uploadSpeed;
                    
                    if (downloadText >= 1000000) {
                        downloadSpeed = (downloadText / 1000000).toFixed(2) + " Mbps";
                    } else {
                        downloadSpeed = (downloadText / 1000).toFixed(2) + " kbps";
                    }
                
                    if (uploadText >= 1000000) {
                        uploadSpeed = (uploadText / 1000000).toFixed(2) + " Mbps";
                    } else {
                        uploadSpeed = (uploadText / 1000).toFixed(2) + " kbps";
                    }
                
                    downloadSpeed = "Download : " + downloadSpeed;
                    uploadSpeed = "Upload : " + uploadSpeed;
                    
                    document.getElementById('info-mikrotik-traffic').textContent = " " + downloadSpeed + " / " + uploadSpeed;
            });

            socket.on('interface', function(data) {
                let totalBytes = 0;
                data.forEach(function(item) {
                    if (item.name === "ether1" || item.name === "ether2") {
                        var upload = (item['tx-byte'] / (1024 * 1024 * 1024));
                        var download = (item['rx-byte'] / (1024 * 1024 * 1024));
                        totalBytes = totalBytes + (upload+download);
                    }
                        
                    var totalGB = (totalBytes.toFixed(2)) + "GB";
                    document.getElementById('info-mikrotik-kuota').textContent = " " + totalGB;
                })
            });
        </script>
    <% } else { %>
        <script>
            function tampilkanlisthotspot() {
                divtambahakun.display = 'none';
                listhotspot();
                divlistakun.display = 'block';
            }

            function tampilkantambahhotspot() {
                divlistakun.display = 'none';
                divtambahakun.display = 'block';
            }
        </script>
    <% } %>
<% } else { %>
<% } %>